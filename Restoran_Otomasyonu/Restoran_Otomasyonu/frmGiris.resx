<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>